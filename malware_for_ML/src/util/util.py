'''
This is a source code that represent utilities that used from this project.
'''

def read_configure(confPath):
    lines = list()
    fd = open(confPath)

    for line in fd:
        line = line.strip()
        if len(line) < 1 or line[0] == '#':
            continue

        lines.append(line)

    return lines

def read_setting_configure(confPath):
    lines = read_configure(confPath)

    setting_property = dict()

    for line in lines:
        (key, value) = line.split('=')
        setting_property[key.strip()] = value.strip()

    return setting_property


def read_feature_configure(confPath):
    lines = read_configure(confPath)
    feature_list = list()

    for line in lines:
        feature = line.split()[0]
        feature_list.append(feature)

    return feature_list

def read_encoding_configure(confPath):
    lines = read_configure(confPath)
    encodingList = list()

    for line in lines:
        line = line.split()

        feature = line[0]
        startIndex = int(line[1])

        encodingList.append([feature,startIndex])

    return encodingList

def load_encoder(path, header=False):
    fd = open(path)

    if header:
        fd.readline()

    nameEncoder = dict()

    for line in fd:
        line = line.strip()
        line = line.split(',')

        fileName = line[0]
        label = line[1]

        nameEncoder[fileName] = label

    fd.close()

    return nameEncoder

