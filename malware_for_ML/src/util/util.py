'''
This is a source code that represent utilities that used from this project.
'''

def read_configure(confPath):
    lines = list()
    fd = open(confPath)

    for line in fd:
        line = line.strip()
        if len(line) < 1 or line[0] == '#':
            continue

        lines.append(line)

    return lines

def read_setting_configure(confPath):
    lines = read_configure(confPath)

    setting_property = dict()

    for line in lines:
        (key, value) = line.split('=')
        setting_property[key.strip()] = value.strip()

    return setting_property


def read_feature_configure(confPath):
    lines = read_configure(confPath)
    feature_list = list()

    for line in lines:
        feature = line.split()[0]
        feature_list.append(feature)

    return feature_list

def read_encoding_configure(confPath):
    lines = read_configure(confPath)
    encodingList = list()

    for line in lines:
        line = line.split()

        feature = line[0]
        startIndex = int(line[1])

        encodingList.append([feature,startIndex])

    return encodingList

def load_encoder(path, header=False):
    fd = open(path)

    if header:
        fd.readline()

    nameEncoder = dict()

    for line in fd:
        line = line.strip()
        line = line.split(',')

        fileName = line[0]
        label = line[1]

        nameEncoder[fileName] = label

    fd.close()

    return nameEncoder

def load_spa_to_dict(path):
    import tqdm

    print '[INFO] load data to dictionary'
    dataDict = dict()

    fd = open(path)

    for line in tqdm.tqdm(fd):
        line = line.strip()
        line = line.split()

        fileName = line[0]
        featureVector = line[1:]

        featureDict = dict()

        for feature in featureVector:
            feature = feature.split(':')
            dim = str(feature[0])
            val = float(feature[1])

            featureDict[dim] = val

        dataDict[fileName] = featureDict

    fd.close()

    return dataDict

def save_dict_to_spa(data_dict,path):
    fd = open(path,'w')

    file_names = data_dict.keys()

    for file_name in file_names:
        feature_data = [file_name]

        features = data_dict[file_name].keys()

        for feature in features:
            val = data_dict[file_name][feature]
            feature_data.append("%d:%f"%(feature,val))
        fd.write(' '.join(feature_data)+'\n')

    fd.close()