from preprocessing.asm.AsmUnit import AsmUnit
import os

class SegCnt(AsmUnit):
    def __init__(self):
        AsmUnit.__init__(self, self.__class__.__name__)

        self.result = None
        self.fileName = None


    def _countSectionLine(self, inputPath):
        lineCountDict = dict()

        fd = open(inputPath)

        for line in fd:
            headLine = line.split()[0]
            sectionName = headLine.split(':')[0]

            if sectionName in lineCountDict:
                lineCountDict[sectionName] += 1
            else:
                lineCountDict[sectionName] = 1

        fd.close()

        return lineCountDict

    def fit_transform(self, inputPath):
        self.fileName = os.path.basename(inputPath).split('.')[0]

        lineCountDict = self._countSectionLine(inputPath)

        self.result = lineCountDict

        return self.result

    def saveResult(self):
        AsmUnit.saveResult(self)  # if result is None, throw Exception
        resultPath = os.path.join(self.resDir, self.fileName)

        resultLine = [self.fileName]

        for key in self.result.keys():
            resultLine.append('%s:%s'%(key, self.result[key]))

        fd = open(resultPath+'.'+self.symbol, 'w')
        fd.write(' '.join(resultLine))
        fd.close()
