'''
This is a source code that represent the highest abstract level of preprocessor for all file
'''

import os
from errorcode.Exceptions import NoResultException, NoFileNameException
from util.util import read_setting_configure

class _Preprocessor(object):
    def __init__(self,symbol):
        self.setting_property = read_setting_configure('../conf/settings.conf')
        self.outDir = self.setting_property['base_directory'] + self.setting_property['output_directory'] #"../resource/output/"
        self.symbol = symbol
        self.resDir = os.path.join(self.outDir,self.setting_property['job_id'], self.symbol)

        self.result = None
        self.fileName = None

    def saveResult(self):
        if self.result is None:
            raise NoResultException('')

        if self.fileName is None:
            raise NoFileNameException('')

    def fit_transform(self, inputPath):
        pass

    def getFileName(self):
        return self.fileName

    def getSymbol(self):
        return self.symbol

    def getResDir(self):
        return self.resDir

    def _checkDir(self):
        if not os.path.exists(self.resDir):
            os.makedirs(self.resDir)
            #print self.resDir