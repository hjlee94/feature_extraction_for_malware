import os
import glob

class NameEncoder:
    def __init__(self,inputPath):
        self.inputPath = inputPath
        self.nameEncoder = None
        self.cls_num = 0

        print '[INFO] inputPath : %s'%(self.inputPath)

    def _retrieve(self, inputPath):
        print '[INFO] retrieving [%s]'%inputPath
        inputPath = os.path.join(inputPath, '*')
        fileList = glob.glob(inputPath)

        inputList = list()

        for path in fileList:
            if os.path.isdir(path):
                inputList += self._retrieve(path)
            else:
                inputList.append(path)

        return inputList

    def generate(self):
        self.nameEncoder = dict()

        # get directory list
        subPaths = os.listdir(self.inputPath)
        print '[INFO] No. subDirectory : %d'%len(subPaths)

        for subPath in sorted(subPaths):
            paths = self._retrieve(os.path.join(self.inputPath, subPath))
            print '[INFO] No. data of %s(%d) : %d'%(os.path.basename(subPath), self.cls_num, len(paths))

            for path in paths:
                fileName = os.path.basename(path).split('.')[0]
                self.nameEncoder[fileName] = self.cls_num

            self.cls_num += 1

        return self.nameEncoder

    def saveAsCSV(self, outputPath):
        fd = open(outputPath, 'w')

        for fileName in self.nameEncoder.keys():
            label = self.nameEncoder[fileName]

            fd.write('%s,%s\n'%(fileName, label))

        fd.close()
